# This is a basic workflow to help you get started with Actions

name: Generate AdGuardHome rules

# Controls when the workflow will run
on:
  schedule:
    - cron: '11 3 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  generate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Generate AdGuardHome rules
        run: |
          chmod +x gfwlist2adguardhome.sh >> log.log
          bash gfwlist2adguardhome.sh -s 192.168.0.1 >> log.log

      # Upload adguardhome_gfwlist.txt
      - uses: actions/upload-artifact@v2
        with:
          name: adguardhome_gfwlist.txt
          path: adguardhome_gfwlist.txt

      # Get Time
      - name: Get current Time
        id: time
        run: echo "::set-output name=time::$(date +'%Y-%m-%d-%H-%M')"

      # Create release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.time.outputs.time }}
          release_name: ${{ steps.time.outputs.time }}
          draft: false
          prerelease: false

      # Upload files to release
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./adguardhome_gfwlist.txt
          asset_name: adguardhome_gfwlist.txt
          asset_content_type: text/plain
